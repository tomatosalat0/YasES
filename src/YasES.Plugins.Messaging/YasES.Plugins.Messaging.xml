<?xml version="1.0"?>
<doc>
    <assembly>
        <name>YasES.Plugins.Messaging</name>
    </assembly>
    <members>
        <member name="M:YasES.Core.EventStoreBuilderMessagingExtensions.UseMessageBroker(YasES.Core.EventStoreBuilder)">
            <summary>
            Adds the <see cref="T:MessageBus.Messaging.IMessageBroker"/> to the builder. This method creates the message broker with
            the default options (see <see cref="M:MessageBus.Messaging.InProcess.MessageBrokerOptions.Default"/>).
            </summary>
        </member>
        <member name="M:YasES.Core.EventStoreBuilderMessagingExtensions.UseMessageBroker(YasES.Core.EventStoreBuilder,MessageBus.Messaging.InProcess.MessageBrokerOptions)">
            <summary>
            Adds the <see cref="T:MessageBus.Messaging.IMessageBroker"/> to the builder. Use the <paramref name="options"/> callback to
            create the scheduling instance which suits best for you.
            The returned object allows to add automatic event creation.
            </summary>
        </member>
        <member name="M:YasES.Core.NotificationEventStoreBuilder.NotifyAfterCommit">
            <summary>
            After every successful <see cref="M:YasES.Core.IEventWrite.Commit(YasES.Core.CommitAttempt)"/>,
            a message wihtin the <see cref="T:MessageBus.Messaging.IMessageBroker"/> gets published. The message
            will be an instance of <see cref="T:YasES.Core.IAfterCommitEvent"/>.
            </summary>
        </member>
        <member name="M:YasES.Core.NotificationEventStoreBuilder.NotifyAfterCommitForStream(YasES.Core.StreamIdentifier)">
            <summary>
            After an successful call to <see cref="M:YasES.Core.IEventWrite.Commit(YasES.Core.CommitAttempt)"/> and
            the commited stream matches the provided <paramref name="streamIdentifier"/>
            (see <see cref="P:YasES.Core.CommitAttempt.StreamIdentifier"/> and <see cref="M:YasES.Core.StreamIdentifier.Matches(YasES.Core.StreamIdentifier)"/>),
            a message within the <see cref="T:MessageBus.Messaging.IMessageBroker"/> gets published. The message
            will be an instance of <see cref="T:YasES.Core.IAfterCommitEvent"/>.
            </summary>
        </member>
    </members>
</doc>
